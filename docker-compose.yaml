services:
  db:
    image: postgres:latest
    container_name: openid-federation-datastore
    security_opt:
      - no-new-privileges:true
    environment:
      POSTGRES_USER: ${DATASOURCE_USER}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
      POSTGRES_DB: ${DATASOURCE_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - openid_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DATASOURCE_DB} -U ${DATASOURCE_USER}" ]
      interval: 3s
      timeout: 5s
      retries: 20

  openid-federation-server:
    image: sphereon/openid-federation-server:latest
    build:
      context: .
      dockerfile: ./.docker/openid-federation-server/Dockerfile
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1536M
        reservations:
          cpus: '0.5'
          memory: 768M
    environment:
      DATASOURCE_URL: jdbc:postgresql://db:5432/${DATASOURCE_DB}
      DATASOURCE_USER: ${DATASOURCE_USER}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD} 
      APP_KEY: ${APP_KEY}
      KMS_PROVIDER: ${KMS_PROVIDER}
      ROOT_IDENTIFIER: https://openid-federation-server.${DOMAIN}
      DEV_MODE: ${DEV_MODE}
      LOGGER_SEVERITY: ${LOGGER_SEVERITY}
      LOGGER_OUTPUT: ${LOGGER_OUTPUT}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - logs-openid-federation-server:/tmp/logs
    networks:
      - openid_network
      - external
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openid-federation-server-keycloakserver.rule=Host(`openid-federation-server.${DOMAIN}`)"
      - "traefik.http.routers.openid-federation-server-keycloakserver.priority=1"
      - "traefik.http.routers.openid-federation-server-keycloakserver.tls=true"
      - "traefik.http.routers.openid-federation-server-keycloakserver.tls.certresolver=le"
      - "traefik.http.routers.openid-federation-server-keycloakserver.entrypoints=https"
      - "traefik.http.routers.openid-federation-server-keycloakserver.service=openid-federation-server-keycloakserver"
      - "traefik.http.services.openid-federation-server-keycloakserver.loadbalancer.server.port=8080"

  openid-federation-admin-server:
    image: sphereon/openid-federation-admin-server:latest
    build:
      context: .
      dockerfile: ./.docker/openid-federation-admin-server/Dockerfile
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1536M
        reservations:
          cpus: '0.5'
          memory: 768M
    environment:
      DATASOURCE_URL: jdbc:postgresql://db:5432/${DATASOURCE_DB}
      DATASOURCE_USER: ${DATASOURCE_USER}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD} 
      APP_KEY: ${APP_KEY}
      KMS_PROVIDER: ${KMS_PROVIDER}
      ROOT_IDENTIFIER: https://openid-federation-server.${DOMAIN}
      DEV_MODE: ${DEV_MODE}
      LOGGER_SEVERITY: ${LOGGER_SEVERITY}
      LOGGER_OUTPUT: ${LOGGER_OUTPUT}
      OAUTH2_RESOURCE_SERVER_JWT_ISSUER_URI: https://openid-federation-server-keycloak.${DOMAIN}/realms/openid-federation
    depends_on:
      db:
        condition: service_healthy
    networks:
      - openid_network
      - external
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sp-admin.rule=Host(`openid-federation-admin-server.${DOMAIN}`)"
      - "traefik.http.routers.sp-admin.priority=1"
      - "traefik.http.routers.sp-admin.tls=true"
      - "traefik.http.routers.sp-admin.tls.certresolver=le"
      - "traefik.http.routers.sp-admin.entrypoints=https"
      - "traefik.http.routers.sp-admin.service=sp-admin"
      - "traefik.http.services.sp-admin.loadbalancer.server.port=8080"

  keycloak:
    image: keycloak/keycloak:26.0
    user: keycloak
    security_opt:
      - no-new-privileges:true
    command:
      - start-dev
      - --import-realm
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1536M
        reservations:
          cpus: '0.5'
          memory: 512M
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
      KC_PROXY: edge
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME: openid-federation-server-keycloak.${DOMAIN}
      KC_HEALTH_ENABLED: true
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      PROXY_ADDRESS_FORWARDING: true
      JAVA_OPTS: "-XX:MaxRAMPercentage=75.0 -XX:InitialRAMPercentage=50.0 -XX:+UseG1GC"
    volumes:
      - ./config/keycloak:/opt/keycloak/data/import/
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - openid_network
      - external
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n' >&3;cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1" ]
      interval: 3s
      timeout: 10s
      retries: 10
      start_period: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openid-federation-server-keycloak.rule=Host(`openid-federation-server-keycloak.${DOMAIN}`)"
      - "traefik.http.routers.openid-federation-server-keycloak.priority=1"
      - "traefik.http.routers.openid-federation-server-keycloak.tls=true"
      - "traefik.http.routers.openid-federation-server-keycloak.tls.certresolver=le"
      - "traefik.http.routers.openid-federation-server-keycloak.entrypoints=https"
      - "traefik.http.routers.openid-federation-server-keycloak.service=openid-federation-server-keycloak"
      - "traefik.http.services.openid-federation-server-keycloak.loadbalancer.server.port=8080"

networks:
  openid_network:
    driver: bridge
  external:
    external: true

volumes:
  postgres_data:
  logs-openid-federation-server:
  logs-admin-server:

